name: CI Test

on:
  pull_request:
    branches: [ master, '**-dev' ]
  push:
    branches: [ 'feature/**', 'hotfix/**']

jobs:
  build-test:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-24.04, ubuntu-22.04]
        compiler: [g++-11, g++-12, g++-13, g++-14, clang++-18]
        mpi-type: [mpich, openmpi]
        build-type: [Release, Debug]
        exclude:
          - os: ubuntu-22.04
            compiler: g++-13
          - os: ubuntu-22.04
            compiler: g++-14
          - os: ubuntu-22.04
            compiler: clang++-18
          - os: ubuntu-24.04
            mpi-type: mpich
          - os: ubuntu-22.04
            build-type: debug
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Update apt
        run: |
          sudo add-apt-repository -y universe
          sudo apt-get update
      - name: Cache boost
        uses: actions/cache@v4
        id: cache-boost
        with:
          path: "~/boost_1_77_0"
          key: ${{ runner.os }}-libboost1.77
      - name: Install boost
        if: steps.cache-boost.outputs.cache-hit != 'true'
        run: |
          cd ~
          wget --no-verbose https://archives.boost.io/release/1.77.0/source/boost_1_77_0.tar.bz2
          tar -xjf boost_1_77_0.tar.bz2
      - name: Install mpich
        if: matrix.mpi-type == 'mpich'
        run: sudo apt-get install mpich
      - name: Install OpenMPI
        if: matrix.mpi-type == 'openmpi'
        run: sudo apt-get install openmpi-bin libopenmpi-dev
      - name: Install GCC
        if: (matrix.compiler == 'g++-11' && matrix.os == 'ubuntu-24.04')
        run: sudo apt-get install gcc-11 g++-11
      - name: Make
        run: |
          echo Run 'make'
          mpicc -show
          ${{ matrix.compiler }} --version
          mkdir build
          cd build
          cmake ../ -DYGM_BUILD_TESTS=On -DCMAKE_BUILD_TYPE=${{ matrix.build-type }} -DCMAKE_CXX_COMPILER=${{ matrix.compiler }} -DBOOST_ROOT=~/boost_1_77_0 -DYGM_INSTALL_PARQUET=ON
          make -j4
      - name: Make test (mpich)
        if: matrix.mpi-type == 'mpich'
        run: |
          echo Run 'make test' with mpich, ${{ matrix.compiler }}
          cd build
          ctest -VV -C ${{ matrix.build-type }}
      - name: Make test (OpenMPI)
        if: matrix.mpi-type == 'openmpi'
        run: |
          echo Run 'make test' with OpenMPI, ${{ matrix.compiler }}
          cd build
          export OMPI_MCA_rmaps_base_oversubscribe=1
          ctest -VV -C ${{ matrix.build-type }}
